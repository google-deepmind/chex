name: ci

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: '30 2 * * *'

permissions:
  contents: read
  actions: write  # to cancel previous workflows

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }} jax=${{ matrix.jax-version }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest]
        jax-version: ["newest"]
        include:
          - python-version: "3.10"
            os: "ubuntu-latest"
            jax-version: "0.4.27"  # Keep this in sync with version in pyproject.toml
          - python-version: "3.13"
            os: "ubuntu-latest"
            jax-version: "nightly"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Compute pyproject.toml hash
        id: deps
        run: |
          echo "hash=$(shasum -a 256 pyproject.toml | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Cache pip based on pyproject.toml
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ steps.deps.outputs.hash }}

      - name: Install build dependencies
        run: pip install .[dev,test]

      - name: Run CI tests
        run: JAX_VERSION="${{ matrix.jax-version }}" bash test.sh
        shell: bash
